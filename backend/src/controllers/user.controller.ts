import { Request, Response, NextFunction } from 'express';
import * as userService from '../services/user.service';

/**
 * Handles the request to update a user's avatar.
 */
export const updateAvatarHandler = async (req: Request, res: Response, next: NextFunction) => {
  try {
    const userId = req.user?.id;
    if (!userId) {
      return res.status(401).json({ status: 'fail', message: 'User not authenticated' });
    }
    if (!req.file) {
      return res.status(400).json({ status: 'fail', message: 'No file uploaded' });
    }

    // The file path is generated by multer. We store this path.
    const avatarUrl = `/uploads/${req.file.filename}`;

    const updatedUser = await userService.updateUserAvatar(userId, avatarUrl);

    res.status(200).json({
      status: 'success',
      data: { user: updatedUser },
    });
  } catch (err: any) {
    next(err);
  }
};

/**
 * Handles the request to get the current user's full profile data.
 */
export const getMeHandler = async (req: Request, res: Response, next: NextFunction) => {
  try {
    const userId = req.user?.id;
    if (!userId) {
      return res.status(401).json({ status: 'fail', message: 'User not authenticated' });
    }

    const user = await userService.findUserById(userId);

    if (!user) {
      return res.status(404).json({ status: 'fail', message: 'User not found' });
    }

    res.status(200).json({
      status: 'success',
      data: { user },
    });
  } catch (err) {
    next(err);
  }
};